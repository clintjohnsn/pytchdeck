[build-system]  # https://docs.astral.sh/uv/concepts/projects/config/#build-systems
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]  # https://packaging.python.org/en/latest/specifications/pyproject-toml/
name = "pytchdeck"
version = "0.0.0"
description = "Pitch yourself to potential recruiters on your portfolio websites."
readme = "README.md"
authors = [
  { name = "Clint Johnson", email = "clintjohnsn@gmil.com" },
]
requires-python = ">=3.12,<4.0"
dependencies = [
  "bs4>=0.0.2",
  "docx2txt>=0.9",
  "ell-ai[all]>=0.0.17",
  "fastapi[all]>=0.111.1,<0.112.0",
  "gunicorn (>=23.0.0)",
  "langchain>=0.1.0",
  "langchain-community>=0.3.25",
  "langfuse>=3.0.1",
  "langgraph>=0.4.8",
  "llama-index>=0.12.40",
  "openai>=1.84.0",
  "poethepoet (>=0.32.1)",
  "pymupdf>=1.26.0",
  "slowapi>=0.1.9",
]

[project.urls]  # https://packaging.python.org/en/latest/specifications/well-known-project-urls/#well-known-labels
homepage = "https://github.com/clintjohnsn/pytchdeck"
source = "https://github.com/clintjohnsn/pytchdeck"
releasenotes = "https://github.com/clintjohnsn/pytchdeck/releases"
documentation = "https://github.com/clintjohnsn/pytchdeck"
issues = "https://github.com/clintjohnsn/pytchdeck/issues"

[dependency-groups]  # https://docs.astral.sh/uv/concepts/projects/dependencies/#development-dependencies
dev = [
  "coverage[toml] (>=7.6.10)",
  "ipykernel (>=6.29.4)",
  "ipython (>=8.18.0)",
  "ipywidgets (>=8.1.2)",
  "mypy (>=1.14.1)",
  "pdoc (>=15.0.1)",
  "pre-commit (>=4.0.1)",
  "pytest (>=8.3.4)",
  "pytest-mock (>=3.14.0)",
  "pytest-xdist (>=3.6.1)",
  "ruff (>=0.9.2)",
]

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
plugins = "pydantic.mypy"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --verbosity=2 --junitxml=reports/pytest.xml"
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff]  # https://docs.astral.sh/ruff/settings/
fix = true
line-length = 100
src = ["src", "tests"]
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["A", "ASYNC", "B", "C4", "C90", "D", "DTZ", "E", "F", "FLY", "FURB", "I", "ISC", "LOG", "N", "NPY", "PERF", "PGH", "PIE", "PL", "PT", "Q", "RET", "RUF", "RSE", "SIM", "TID", "UP", "W", "YTT"]
ignore = ["D203", "D213", "E501", "PGH002", "PGH003", "RET504", "S101", "S307"]
unfixable = ["F401", "F841"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poe.executor]  # https://github.com/nat-n/poethepoet
type = "simple"

[tool.poe.tasks]

  [tool.poe.tasks.serve]
  help = "Serve the REST API"
  shell = """
    if [ $dev ]
    then {
      uvicorn \
        --host $host \
        --port $port \
        --reload \
        pytchdeck.main:app
    } else {
      gunicorn \
        --access-logfile - \
        --bind $host:$port \
        --graceful-timeout 10 \
        --keep-alive 10 \
        --log-file - \
        --timeout 30 \
        --worker-class uvicorn.workers.UvicornWorker \
        --worker-tmp-dir /dev/shm \
        --workers 2 \
        pytchdeck.main:app
    } fi
    """

    [[tool.poe.tasks.serve.args]]
    help = "Bind socket to this host (default: 0.0.0.0)"
    name = "host"
    options = ["--host"]
    default = "0.0.0.0"

    [[tool.poe.tasks.serve.args]]
    help = "Bind socket to this port (default: 8000)"
    name = "port"
    options = ["--port"]
    default = "8000"

    [[tool.poe.tasks.serve.args]]
    help = "Enable development mode"
    type = "boolean"
    name = "dev"
    options = ["--dev"]

  [tool.poe.tasks.docs]
  help = "Generate this app's docs"
  cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      pytchdeck
    """

    [[tool.poe.tasks.docs.args]]
    help = "The docstring style (default: numpy)"
    name = "docformat"
    options = ["--docformat"]
    default = "numpy"

    [[tool.poe.tasks.docs.args]]
    help = "The output directory (default: docs)"
    name = "outputdirectory"
    options = ["--output-directory"]
    default = "docs"

  [tool.poe.tasks.lint]
  help = "Lint this app"
  cmd = """
    pre-commit run
      --all-files
      --color always
    """

  [tool.poe.tasks.test]
  help = "Test this app"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage run"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage report"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage xml"
